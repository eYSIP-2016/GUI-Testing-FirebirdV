/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIApp1;
//import static GUIApp1.SerialPortConnection.serialport;
import java.awt.*;
import javax.swing.*;
import java.io.*;
import gnu.io.*;
import java.util.*;
//import javax.comm.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Amit Bhargava
 */
public class GUIApp1 extends javax.swing.JFrame
{ 
    final static int SPACE_ASCII = 32;
    final static int DASH_ASCII = 45;
    final static int NEW_LINE_ASCII = 10;
    int count=0; // used to set values of labels giving readings of sensors
    int statusBuzzer=0,statusConnect=0, flag=0, count1=0;
    //static int statusVelocity=0; // buzzer on: status=0, buzzer off: status=1
    int value, value1, sliderValue,tempvalue;
    float value2;
    Canvas canvas;
    boolean read = true;
    boolean suspended = false;
    SerialPortConnection spc;

    /**
     * Creates new form GUIApp1
     */
    public GUIApp1() {
        initComponents();
        spc = new SerialPortConnection();
        jComboBoxCOMPorts.removeAllItems();
        listSerialPorts();
        jTextFieldLeftMotor.setEnabled(false);
        jTextFieldRightMotor.setEnabled(false);
        jTextFieldServo1.setEnabled(false);
        jTextFieldServo2.setEnabled(false);
        jTextFieldServo3.setEnabled(false);
        jTextFieldDistance.setEnabled(false);
        jButtonCOMDisconnect.setEnabled(false);
        jTextFieldRotation.setEnabled(false);
        jButtonResetVelocity.setEnabled(false);
        jButtonSetVelocity.setEnabled(false);
        jTextFieldLCDRow.setEnabled(false);
        jTextFieldLCDColumn.setEnabled(false);
        jTextFieldLCDText.setEnabled(false);
        jTextFieldBarGraphLed.setEnabled(false);
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFrame = new javax.swing.JPanel();
        jPanelCOMPort = new javax.swing.JPanel();
        jLabelCOMPort = new javax.swing.JLabel();
        jComboBoxCOMPorts = new javax.swing.JComboBox();
        jButtonCOMConnect = new javax.swing.JButton();
        jButtonCOMDisconnect = new javax.swing.JButton();
        jLabelHeading = new javax.swing.JLabel();
        jPanelBuzzer = new javax.swing.JPanel();
        jLabelBuzzer = new javax.swing.JLabel();
        jButtonBuzzer = new javax.swing.JButton();
        jPanelMotionControl = new javax.swing.JPanel();
        jLabelMotionControl = new javax.swing.JLabel();
        jButtonStopMotion = new javax.swing.JButton();
        jButtonBackwardMotion = new javax.swing.JButton();
        jButtonRightMotion = new javax.swing.JButton();
        jButtonLeftMotion = new javax.swing.JButton();
        jButtonForwardMotion = new javax.swing.JButton();
        jPanelWLSensor = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelRightWLSensor = new javax.swing.JLabel();
        jLabelCenterWLSensor = new javax.swing.JLabel();
        jLabelLeftWLSensor = new javax.swing.JLabel();
        jProgressBarLeftWLSensor = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarCenterWLSensor = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarRightWLSensor = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanelServoMotor = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSliderServo2 = new javax.swing.JSlider();
        jSliderServo3 = new javax.swing.JSlider();
        jLabelServoMotor1 = new javax.swing.JLabel();
        jLabelServoMotor2 = new javax.swing.JLabel();
        jLabelServoMotor3 = new javax.swing.JLabel();
        jSliderServo1 = new javax.swing.JSlider();
        jTextFieldServo1 = new javax.swing.JTextField();
        jTextFieldServo2 = new javax.swing.JTextField();
        jTextFieldServo3 = new javax.swing.JTextField();
        jButtonServo1 = new javax.swing.JButton();
        jButtonServo2 = new javax.swing.JButton();
        jButtonServo3 = new javax.swing.JButton();
        jPanelLCD = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabelLCDRow = new javax.swing.JLabel();
        jLabelLCDColumn = new javax.swing.JLabel();
        jLabelLCDText = new javax.swing.JLabel();
        jTextFieldLCDRow = new javax.swing.JTextField();
        jTextFieldLCDColumn = new javax.swing.JTextField();
        jTextFieldLCDText = new javax.swing.JTextField();
        jButtonLCDPrint = new javax.swing.JButton();
        jPanelVelocity = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jSliderRightMotor = new javax.swing.JSlider(JSlider.VERTICAL,0,255,0);
        jTextFieldLeftMotor = new javax.swing.JTextField();
        jTextFieldRightMotor = new javax.swing.JTextField();
        jButtonSetVelocity = new javax.swing.JButton();
        jSliderLeftMotor = new javax.swing.JSlider(JSlider.VERTICAL,0,255,0);
        jLabelLeftMotor = new javax.swing.JLabel();
        jLabelRightMotor = new javax.swing.JLabel();
        jButtonResetVelocity = new javax.swing.JButton();
        jPanelBatterVoltage = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabelVoltage = new javax.swing.JLabel();
        jProgressBarBatteryVoltage = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jPanelIRSensor = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabelIRSensor1 = new javax.swing.JLabel();
        jLabelIRSensor2 = new javax.swing.JLabel();
        jLabelIRSensor3 = new javax.swing.JLabel();
        jLabelIRSensor4 = new javax.swing.JLabel();
        jLabelIRSensor5 = new javax.swing.JLabel();
        jLabelIRSensor6 = new javax.swing.JLabel();
        jLabelIRSensor7 = new javax.swing.JLabel();
        jLabelIRSensor8 = new javax.swing.JLabel();
        jProgressBarIRSensor1 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarIRSensor2 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarIRSensor3 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarIRSensor4 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarIRSensor5 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarIRSensor6 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarIRSensor7 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarIRSensor8 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanelDistanceSensor = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabelSharpSensor3 = new javax.swing.JLabel();
        jLabelSharpSensor1 = new javax.swing.JLabel();
        jLabelSharpSensor2 = new javax.swing.JLabel();
        jLabelSharpSensor4 = new javax.swing.JLabel();
        jLabelSharpSensor5 = new javax.swing.JLabel();
        jProgressBarSharpSensor1 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarSharpSensor2 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarSharpSensor3 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarSharpSensor4 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jProgressBarSharpSensor5 = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanelMovementRotation = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabelRotation = new javax.swing.JLabel();
        jTextFieldRotation = new javax.swing.JTextField();
        jButtonForwardMovement = new javax.swing.JButton();
        jLabelDistance = new javax.swing.JLabel();
        jTextFieldDistance = new javax.swing.JTextField();
        jButtonBackwardMovement = new javax.swing.JButton();
        jButtonRightRotation = new javax.swing.JButton();
        jButtonLeftRotation = new javax.swing.JButton();
        jPanelBarLED = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jTextFieldBarGraphLed = new javax.swing.JTextField();
        jButtonBarGraphLed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FIRE BIRD V");

        jPanelFrame.setBackground(new java.awt.Color(204, 204, 255));

        jPanelCOMPort.setBackground(new java.awt.Color(153, 204, 255));
        jPanelCOMPort.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCOMPort.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelCOMPort.setForeground(new java.awt.Color(0, 0, 102));
        jLabelCOMPort.setText("   COM PORT");

        jComboBoxCOMPorts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCOMPortsActionPerformed(evt);
            }
        });

        jButtonCOMConnect.setText("Connect");
        jButtonCOMConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCOMConnectActionPerformed(evt);
            }
        });

        jButtonCOMDisconnect.setText("Disconnect");
        jButtonCOMDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCOMDisconnectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCOMPortLayout = new javax.swing.GroupLayout(jPanelCOMPort);
        jPanelCOMPort.setLayout(jPanelCOMPortLayout);
        jPanelCOMPortLayout.setHorizontalGroup(
            jPanelCOMPortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCOMPortLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBoxCOMPorts, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCOMPortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonCOMDisconnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCOMConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelCOMPortLayout.createSequentialGroup()
                .addComponent(jLabelCOMPort, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelCOMPortLayout.setVerticalGroup(
            jPanelCOMPortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCOMPortLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabelCOMPort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCOMPortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCOMPorts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCOMConnect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCOMDisconnect)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabelHeading.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelHeading.setForeground(new java.awt.Color(255, 0, 0));
        jLabelHeading.setText("FIREBIRD V ATMEGA 2560");

        jPanelBuzzer.setBackground(new java.awt.Color(153, 204, 255));
        jPanelBuzzer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelBuzzer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelBuzzer.setForeground(new java.awt.Color(0, 0, 102));
        jLabelBuzzer.setText("  BUZZER");

        jButtonBuzzer.setText("On");
        jButtonBuzzer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuzzerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBuzzerLayout = new javax.swing.GroupLayout(jPanelBuzzer);
        jPanelBuzzer.setLayout(jPanelBuzzerLayout);
        jPanelBuzzerLayout.setHorizontalGroup(
            jPanelBuzzerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBuzzerLayout.createSequentialGroup()
                .addComponent(jLabelBuzzer, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addGap(43, 43, 43))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBuzzerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonBuzzer, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelBuzzerLayout.setVerticalGroup(
            jPanelBuzzerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuzzerLayout.createSequentialGroup()
                .addComponent(jLabelBuzzer, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonBuzzer, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelMotionControl.setBackground(new java.awt.Color(153, 204, 255));
        jPanelMotionControl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelMotionControl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelMotionControl.setForeground(new java.awt.Color(0, 0, 102));
        jLabelMotionControl.setText("MOTION CONTROL");

        jButtonStopMotion.setText("Stop");
        jButtonStopMotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopMotionActionPerformed(evt);
            }
        });

        jButtonBackwardMotion.setText("Backward");
        jButtonBackwardMotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackwardMotionActionPerformed(evt);
            }
        });

        jButtonRightMotion.setText("Right");
        jButtonRightMotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRightMotionActionPerformed(evt);
            }
        });

        jButtonLeftMotion.setText("Left");
        jButtonLeftMotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLeftMotionActionPerformed(evt);
            }
        });

        jButtonForwardMotion.setText("Forward");
        jButtonForwardMotion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonForwardMotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonForwardMotionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMotionControlLayout = new javax.swing.GroupLayout(jPanelMotionControl);
        jPanelMotionControl.setLayout(jPanelMotionControlLayout);
        jPanelMotionControlLayout.setHorizontalGroup(
            jPanelMotionControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMotionControlLayout.createSequentialGroup()
                .addComponent(jLabelMotionControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(182, 182, 182))
            .addGroup(jPanelMotionControlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelMotionControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonBackwardMotion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMotionControlLayout.createSequentialGroup()
                        .addComponent(jButtonLeftMotion, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonStopMotion, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonForwardMotion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonRightMotion, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanelMotionControlLayout.setVerticalGroup(
            jPanelMotionControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMotionControlLayout.createSequentialGroup()
                .addComponent(jLabelMotionControl, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonForwardMotion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMotionControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLeftMotion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRightMotion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonStopMotion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonBackwardMotion, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jPanelWLSensor.setBackground(new java.awt.Color(153, 204, 255));
        jPanelWLSensor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("WHITE LINE SENSORS");

        jLabelRightWLSensor.setBackground(new java.awt.Color(255, 255, 255));

        jProgressBarLeftWLSensor.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarLeftWLSensor.setMaximum(300);
        jProgressBarLeftWLSensor.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarCenterWLSensor.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarCenterWLSensor.setMaximum(300);
        jProgressBarCenterWLSensor.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarRightWLSensor.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarRightWLSensor.setMaximum(300);
        jProgressBarRightWLSensor.setPreferredSize(new java.awt.Dimension(26, 200));

        jLabel16.setText("Left");

        jLabel17.setText("Center");

        jLabel18.setText("Right");

        javax.swing.GroupLayout jPanelWLSensorLayout = new javax.swing.GroupLayout(jPanelWLSensor);
        jPanelWLSensor.setLayout(jPanelWLSensorLayout);
        jPanelWLSensorLayout.setHorizontalGroup(
            jPanelWLSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWLSensorLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanelWLSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelWLSensorLayout.createSequentialGroup()
                        .addGroup(jPanelWLSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBarLeftWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelLeftWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanelWLSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCenterWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProgressBarCenterWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanelWLSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBarRightWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelRightWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanelWLSensorLayout.setVerticalGroup(
            jPanelWLSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWLSensorLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWLSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWLSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelWLSensorLayout.createSequentialGroup()
                        .addGroup(jPanelWLSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBarRightWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProgressBarCenterWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanelWLSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCenterWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelRightWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelWLSensorLayout.createSequentialGroup()
                        .addComponent(jProgressBarLeftWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelLeftWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIApp1/logo1.png"))); // NOI18N

        jPanelServoMotor.setBackground(new java.awt.Color(153, 204, 255));
        jPanelServoMotor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("SERVO MOTOR");

        jSliderServo2.setMajorTickSpacing(30);
        jSliderServo2.setMaximum(180);
        jSliderServo2.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderServo2.setPaintLabels(true);
        jSliderServo2.setPaintTicks(true);
        jSliderServo2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                getSliderValueServo2(evt);
            }
        });

        jSliderServo3.setMajorTickSpacing(30);
        jSliderServo3.setMaximum(180);
        jSliderServo3.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderServo3.setPaintLabels(true);
        jSliderServo3.setPaintTicks(true);
        jSliderServo3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                getSliderValueServo3(evt);
            }
        });

        jLabelServoMotor1.setText("Motor1");

        jLabelServoMotor2.setText("Motor2");

        jLabelServoMotor3.setText("Motor3");

        jSliderServo1.setMajorTickSpacing(30);
        jSliderServo1.setMaximum(180);
        jSliderServo1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderServo1.setPaintLabels(true);
        jSliderServo1.setPaintTicks(true);
        jSliderServo1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                getSliderValueServo1(evt);
            }
        });

        jTextFieldServo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldServo1ActionPerformed(evt);
            }
        });

        jTextFieldServo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldServo2ActionPerformed(evt);
            }
        });

        jTextFieldServo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldServo3ActionPerformed(evt);
            }
        });

        jButtonServo1.setText("Rotate");
        jButtonServo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonServo1ActionPerformed(evt);
            }
        });

        jButtonServo2.setText("Rotate");
        jButtonServo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonServo2ActionPerformed(evt);
            }
        });

        jButtonServo3.setText("Rotate");
        jButtonServo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonServo3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelServoMotorLayout = new javax.swing.GroupLayout(jPanelServoMotor);
        jPanelServoMotor.setLayout(jPanelServoMotorLayout);
        jPanelServoMotorLayout.setHorizontalGroup(
            jPanelServoMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelServoMotorLayout.createSequentialGroup()
                .addGroup(jPanelServoMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelServoMotorLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(123, 123, 123))
                    .addGroup(jPanelServoMotorLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabelServoMotor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabelServoMotor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabelServoMotor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(17, 17, 17))
                    .addGroup(jPanelServoMotorLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jSliderServo1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                        .addGap(31, 31, 31)
                        .addComponent(jSliderServo2, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                        .addGap(40, 40, 40)
                        .addComponent(jSliderServo3, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                        .addGap(15, 15, 15))
                    .addGroup(jPanelServoMotorLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jTextFieldServo1)
                        .addGap(30, 30, 30)
                        .addComponent(jTextFieldServo2)
                        .addGap(40, 40, 40)
                        .addComponent(jTextFieldServo3)
                        .addGap(17, 17, 17))
                    .addGroup(jPanelServoMotorLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButtonServo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(jButtonServo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(jButtonServo3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(7, 7, 7)))
                .addGap(19, 19, 19))
        );
        jPanelServoMotorLayout.setVerticalGroup(
            jPanelServoMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelServoMotorLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(24, 24, 24)
                .addGroup(jPanelServoMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelServoMotor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelServoMotor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelServoMotor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanelServoMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSliderServo1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jSliderServo2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jSliderServo3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanelServoMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldServo1)
                    .addComponent(jTextFieldServo2)
                    .addComponent(jTextFieldServo3, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanelServoMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonServo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonServo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonServo3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        jPanelLCD.setBackground(new java.awt.Color(153, 204, 255));
        jPanelLCD.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setText("PRINT ON LCD");

        jLabelLCDRow.setText("Row");

        jLabelLCDColumn.setText("Column");

        jLabelLCDText.setText("Text(one character)");

        jButtonLCDPrint.setText("Print");
        jButtonLCDPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLCDPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLCDLayout = new javax.swing.GroupLayout(jPanelLCD);
        jPanelLCD.setLayout(jPanelLCDLayout);
        jPanelLCDLayout.setHorizontalGroup(
            jPanelLCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLCDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLCDLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLCDLayout.createSequentialGroup()
                        .addGroup(jPanelLCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLCDLayout.createSequentialGroup()
                                .addComponent(jLabelLCDText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanelLCDLayout.createSequentialGroup()
                                .addComponent(jLabelLCDColumn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(54, 54, 54))
                            .addGroup(jPanelLCDLayout.createSequentialGroup()
                                .addComponent(jLabelLCDRow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(54, 54, 54)))
                        .addGroup(jPanelLCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldLCDRow, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                            .addComponent(jTextFieldLCDColumn)
                            .addComponent(jTextFieldLCDText))))
                .addGap(12, 12, 12))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLCDLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jButtonLCDPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(59, 59, 59))
        );
        jPanelLCDLayout.setVerticalGroup(
            jPanelLCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLCDLayout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanelLCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLCDLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jTextFieldLCDRow))
                    .addComponent(jLabelLCDRow))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLCDLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jTextFieldLCDColumn))
                    .addComponent(jLabelLCDColumn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLCDLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jTextFieldLCDText))
                    .addComponent(jLabelLCDText))
                .addGap(18, 18, 18)
                .addComponent(jButtonLCDPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        jPanelVelocity.setBackground(new java.awt.Color(153, 204, 255));
        jPanelVelocity.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 102));
        jLabel10.setText(" VELOCITY OF MOTORS");

        jSliderRightMotor.setMajorTickSpacing(51);
        jSliderRightMotor.setMaximum(255);
        jSliderRightMotor.setMinorTickSpacing(3);
        jSliderRightMotor.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderRightMotor.setPaintLabels(true);
        jSliderRightMotor.setPaintTicks(true);
        jSliderRightMotor.setValue(0);
        jSliderRightMotor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                getSliderValueRightMotor(evt);
            }
        });

        jTextFieldLeftMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLeftMotorActionPerformed(evt);
            }
        });

        jTextFieldRightMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRightMotorActionPerformed(evt);
            }
        });

        jButtonSetVelocity.setText("SET");
        jButtonSetVelocity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSetVelocityActionPerformed(evt);
            }
        });

        jSliderLeftMotor.setMajorTickSpacing(51);
        jSliderLeftMotor.setMaximum(255);
        jSliderLeftMotor.setMinorTickSpacing(3);
        jSliderLeftMotor.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderLeftMotor.setPaintLabels(true);
        jSliderLeftMotor.setPaintTicks(true);
        jSliderLeftMotor.setValue(0);
        jSliderLeftMotor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                getSliderValueLeftMotor(evt);
            }
        });

        jLabelLeftMotor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelLeftMotor.setForeground(new java.awt.Color(0, 0, 153));
        jLabelLeftMotor.setText("Left Motor");

        jLabelRightMotor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelRightMotor.setForeground(new java.awt.Color(0, 0, 153));
        jLabelRightMotor.setText("Right Motor");

        jButtonResetVelocity.setText("RESET");
        jButtonResetVelocity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetVelocityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelVelocityLayout = new javax.swing.GroupLayout(jPanelVelocity);
        jPanelVelocity.setLayout(jPanelVelocityLayout);
        jPanelVelocityLayout.setHorizontalGroup(
            jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVelocityLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelVelocityLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSliderLeftMotor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelLeftMotor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4))
                    .addComponent(jTextFieldLeftMotor))
                .addGap(17, 17, 17)
                .addGroup(jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelVelocityLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonSetVelocity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonResetVelocity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)))
                .addGap(6, 6, 6)
                .addGroup(jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelVelocityLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelVelocityLayout.createSequentialGroup()
                                .addComponent(jSliderRightMotor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(10, 10, 10))
                            .addComponent(jLabelRightMotor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4))
                    .addComponent(jTextFieldRightMotor))
                .addGap(5, 5, 5))
        );
        jPanelVelocityLayout.setVerticalGroup(
            jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVelocityLayout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addGap(137, 137, 137)
                .addComponent(jButtonSetVelocity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButtonResetVelocity, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addGap(27, 27, 27))
            .addGroup(jPanelVelocityLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelVelocityLayout.createSequentialGroup()
                        .addGroup(jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelVelocityLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jSliderLeftMotor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanelVelocityLayout.createSequentialGroup()
                                .addComponent(jLabelLeftMotor, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                .addGap(198, 198, 198)))
                        .addGap(10, 10, 10)
                        .addComponent(jTextFieldLeftMotor, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                    .addGroup(jPanelVelocityLayout.createSequentialGroup()
                        .addGroup(jPanelVelocityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelVelocityLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jSliderRightMotor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanelVelocityLayout.createSequentialGroup()
                                .addComponent(jLabelRightMotor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(198, 198, 198)))
                        .addGap(10, 10, 10)
                        .addComponent(jTextFieldRightMotor, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)))
                .addGap(14, 14, 14))
        );

        jPanelBatterVoltage.setBackground(new java.awt.Color(153, 204, 255));
        jPanelBatterVoltage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setText("     VOLTAGE");

        jProgressBarBatteryVoltage.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarBatteryVoltage.setMaximum(12);
        jProgressBarBatteryVoltage.setPreferredSize(new java.awt.Dimension(26, 200));

        javax.swing.GroupLayout jPanelBatterVoltageLayout = new javax.swing.GroupLayout(jPanelBatterVoltage);
        jPanelBatterVoltage.setLayout(jPanelBatterVoltageLayout);
        jPanelBatterVoltageLayout.setHorizontalGroup(
            jPanelBatterVoltageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelVoltage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBatterVoltageLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jProgressBarBatteryVoltage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(38, 38, 38))
        );
        jPanelBatterVoltageLayout.setVerticalGroup(
            jPanelBatterVoltageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBatterVoltageLayout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addGap(39, 39, 39)
                .addComponent(jProgressBarBatteryVoltage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelVoltage, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        jPanelIRSensor.setBackground(new java.awt.Color(153, 204, 255));
        jPanelIRSensor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("   IR SENSORS READINGS");

        jProgressBarIRSensor1.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarIRSensor1.setMaximum(300);
        jProgressBarIRSensor1.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarIRSensor2.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarIRSensor2.setMaximum(300);
        jProgressBarIRSensor2.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarIRSensor3.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarIRSensor3.setMaximum(300);
        jProgressBarIRSensor3.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarIRSensor4.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarIRSensor4.setMaximum(300);
        jProgressBarIRSensor4.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarIRSensor5.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarIRSensor5.setMaximum(300);
        jProgressBarIRSensor5.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarIRSensor6.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarIRSensor6.setMaximum(300);
        jProgressBarIRSensor6.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarIRSensor7.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarIRSensor7.setMaximum(300);
        jProgressBarIRSensor7.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarIRSensor8.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarIRSensor8.setMaximum(300);
        jProgressBarIRSensor8.setPreferredSize(new java.awt.Dimension(26, 200));

        jLabel19.setText("1");

        jLabel20.setText("2");

        jLabel21.setText("3");

        jLabel22.setText("4");

        jLabel23.setText("5");

        jLabel24.setText("6");

        jLabel25.setText("7");

        jLabel26.setText("8");

        javax.swing.GroupLayout jPanelIRSensorLayout = new javax.swing.GroupLayout(jPanelIRSensor);
        jPanelIRSensor.setLayout(jPanelIRSensorLayout);
        jPanelIRSensorLayout.setHorizontalGroup(
            jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                                .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jProgressBarIRSensor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(24, 24, 24)
                                .addComponent(jProgressBarIRSensor2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelIRSensorLayout.createSequentialGroup()
                                .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                                        .addGap(100, 100, 100)
                                        .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jProgressBarIRSensor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(34, 34, 34)
                                        .addComponent(jProgressBarIRSensor4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                                .addGap(33, 33, 33)
                                .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelIRSensorLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(40, 40, 40)
                                        .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                                        .addComponent(jProgressBarIRSensor5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(26, 26, 26)
                                        .addComponent(jProgressBarIRSensor6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                        .addGap(30, 30, 30)
                        .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jProgressBarIRSensor7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBarIRSensor8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                                .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)))
                        .addGap(10, 10, 10))
                    .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabelIRSensor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabelIRSensor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabelIRSensor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabelIRSensor4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelIRSensor5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelIRSensor6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelIRSensor7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelIRSensor8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelIRSensorLayout.setVerticalGroup(
            jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIRSensorLayout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addGap(13, 13, 13)
                .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBarIRSensor6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBarIRSensor7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBarIRSensor5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBarIRSensor8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBarIRSensor4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBarIRSensor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBarIRSensor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBarIRSensor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelIRSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIRSensor1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabelIRSensor2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabelIRSensor3, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabelIRSensor4, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabelIRSensor5, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabelIRSensor6, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabelIRSensor7, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabelIRSensor8, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );

        jPanelDistanceSensor.setBackground(new java.awt.Color(153, 204, 255));
        jPanelDistanceSensor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 153));
        jLabel11.setText("DISTANCE SENSORS");

        jProgressBarSharpSensor1.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarSharpSensor1.setMaximum(800);
        jProgressBarSharpSensor1.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarSharpSensor2.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarSharpSensor2.setMaximum(800);
        jProgressBarSharpSensor2.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarSharpSensor3.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarSharpSensor3.setMaximum(800);
        jProgressBarSharpSensor3.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarSharpSensor4.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarSharpSensor4.setMaximum(800);
        jProgressBarSharpSensor4.setPreferredSize(new java.awt.Dimension(26, 200));

        jProgressBarSharpSensor5.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBarSharpSensor5.setMaximum(800);
        jProgressBarSharpSensor5.setPreferredSize(new java.awt.Dimension(26, 200));

        jLabel6.setText("1");

        jLabel12.setText("2");

        jLabel13.setText("3");

        jLabel14.setText("4");

        jLabel15.setText("5");

        javax.swing.GroupLayout jPanelDistanceSensorLayout = new javax.swing.GroupLayout(jPanelDistanceSensor);
        jPanelDistanceSensor.setLayout(jPanelDistanceSensorLayout);
        jPanelDistanceSensorLayout.setHorizontalGroup(
            jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                        .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(90, 90, 90))
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(70, 70, 70)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(14, 14, 14))
                    .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(86, 86, 86))
                    .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                        .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jProgressBarSharpSensor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(67, 67, 67))
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabelSharpSensor1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)))
                        .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addComponent(jProgressBarSharpSensor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(65, 65, 65))
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addComponent(jLabelSharpSensor2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)))
                        .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addComponent(jProgressBarSharpSensor3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(58, 58, 58))
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addComponent(jLabelSharpSensor3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)))
                        .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addComponent(jLabelSharpSensor4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(67, 67, 67))
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addComponent(jProgressBarSharpSensor4, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                                .addGap(54, 54, 54)
                                .addComponent(jProgressBarSharpSensor5, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)))))
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDistanceSensorLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelSharpSensor5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanelDistanceSensorLayout.setVerticalGroup(
            jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                        .addComponent(jProgressBarSharpSensor1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabelSharpSensor2, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelSharpSensor1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                    .addComponent(jLabelSharpSensor3, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                    .addComponent(jLabelSharpSensor4, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                                .addGap(3, 3, 3)))
                        .addGap(9, 9, 9))
                    .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanelDistanceSensorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addComponent(jProgressBarSharpSensor2, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                .addGap(47, 47, 47))
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addComponent(jProgressBarSharpSensor3, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                .addGap(47, 47, 47))
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addComponent(jProgressBarSharpSensor4, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                .addGap(47, 47, 47))
                            .addGroup(jPanelDistanceSensorLayout.createSequentialGroup()
                                .addComponent(jProgressBarSharpSensor5, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelSharpSensor5, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                .addContainerGap())))))
        );

        jPanelMovementRotation.setBackground(new java.awt.Color(153, 204, 255));
        jPanelMovementRotation.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 153));
        jLabel30.setText("MOVEMENT AND ROTATION");

        jLabelRotation.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelRotation.setText("Angle Of Rotation");

        jButtonForwardMovement.setText("Forward");
        jButtonForwardMovement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonForwardMovementActionPerformed(evt);
            }
        });

        jLabelDistance.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelDistance.setText("Distance(in mm)");

        jButtonBackwardMovement.setText("Backward");
        jButtonBackwardMovement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackwardMovementActionPerformed(evt);
            }
        });

        jButtonRightRotation.setText("Rotate Right");
        jButtonRightRotation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRightRotationActionPerformed(evt);
            }
        });

        jButtonLeftRotation.setText("Rotate Left");
        jButtonLeftRotation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLeftRotationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMovementRotationLayout = new javax.swing.GroupLayout(jPanelMovementRotation);
        jPanelMovementRotation.setLayout(jPanelMovementRotationLayout);
        jPanelMovementRotationLayout.setHorizontalGroup(
            jPanelMovementRotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMovementRotationLayout.createSequentialGroup()
                .addGroup(jPanelMovementRotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMovementRotationLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanelMovementRotationLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabelRotation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(jTextFieldRotation))
                    .addGroup(jPanelMovementRotationLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButtonRightRotation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)
                        .addComponent(jButtonLeftRotation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addGroup(jPanelMovementRotationLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabelDistance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(40, 40, 40)
                        .addComponent(jTextFieldDistance))
                    .addGroup(jPanelMovementRotationLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jButtonForwardMovement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(60, 60, 60))
                    .addGroup(jPanelMovementRotationLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jButtonBackwardMovement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(60, 60, 60)))
                .addContainerGap())
        );
        jPanelMovementRotationLayout.setVerticalGroup(
            jPanelMovementRotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMovementRotationLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addGroup(jPanelMovementRotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRotation, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jTextFieldRotation, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanelMovementRotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonRightRotation, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jButtonLeftRotation, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(jPanelMovementRotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDistance, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jTextFieldDistance, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addComponent(jButtonForwardMovement, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addComponent(jButtonBackwardMovement, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );

        jPanelBarLED.setBackground(new java.awt.Color(153, 204, 255));
        jPanelBarLED.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 0, 153));
        jLabel36.setText("BAR GRAPH LED");

        jLabel37.setText("LED Number(1-8)");

        jButtonBarGraphLed.setText("Glow");
        jButtonBarGraphLed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBarGraphLedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBarLEDLayout = new javax.swing.GroupLayout(jPanelBarLED);
        jPanelBarLED.setLayout(jPanelBarLEDLayout);
        jPanelBarLEDLayout.setHorizontalGroup(
            jPanelBarLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarLEDLayout.createSequentialGroup()
                .addGroup(jPanelBarLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBarLEDLayout.createSequentialGroup()
                        .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldBarGraphLed))
                    .addGroup(jPanelBarLEDLayout.createSequentialGroup()
                        .addGroup(jPanelBarLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelBarLEDLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jButtonBarGraphLed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(20, 20, 20))
                            .addGroup(jPanelBarLEDLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(14, 14, 14)))
                .addContainerGap())
        );
        jPanelBarLEDLayout.setVerticalGroup(
            jPanelBarLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarLEDLayout.createSequentialGroup()
                .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBarLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldBarGraphLed, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonBarGraphLed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout jPanelFrameLayout = new javax.swing.GroupLayout(jPanelFrame);
        jPanelFrame.setLayout(jPanelFrameLayout);
        jPanelFrameLayout.setHorizontalGroup(
            jPanelFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFrameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFrameLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanelFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFrameLayout.createSequentialGroup()
                        .addComponent(jPanelVelocity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelMovementRotation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelFrameLayout.createSequentialGroup()
                        .addGroup(jPanelFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFrameLayout.createSequentialGroup()
                                .addComponent(jPanelCOMPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelBuzzer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanelMotionControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelServoMotor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanelFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFrameLayout.createSequentialGroup()
                        .addComponent(jPanelWLSensor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelDistanceSensor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelFrameLayout.createSequentialGroup()
                        .addGroup(jPanelFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelLCD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelBarLED, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelBatterVoltage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelIRSensor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelFrameLayout.setVerticalGroup(
            jPanelFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFrameLayout.createSequentialGroup()
                .addGroup(jPanelFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFrameLayout.createSequentialGroup()
                        .addComponent(jLabelHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE))
                    .addGroup(jPanelFrameLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)))
                .addGroup(jPanelFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelServoMotor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBatterVoltage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelIRSensor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelFrameLayout.createSequentialGroup()
                        .addGroup(jPanelFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelCOMPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelBuzzer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelMotionControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelFrameLayout.createSequentialGroup()
                        .addComponent(jPanelLCD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelBarLED, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelMovementRotation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelVelocity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelDistanceSensor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelWLSensor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 302, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFrame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuzzerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuzzerActionPerformed
        if(statusBuzzer==0){
            spc.writeOnTerminal("7");
            statusBuzzer=1;
            jButtonBuzzer.setText("Off");
        }
        else if(statusBuzzer==1){
            spc.writeOnTerminal("9");
            statusBuzzer=0;
            jButtonBuzzer.setText("On");
        }
    }//GEN-LAST:event_jButtonBuzzerActionPerformed

    private void jButtonForwardMotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonForwardMotionActionPerformed
        spc.writeOnTerminal("8");
    }//GEN-LAST:event_jButtonForwardMotionActionPerformed

    private void jButtonRightMotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRightMotionActionPerformed
        spc.writeOnTerminal("4");
    }//GEN-LAST:event_jButtonRightMotionActionPerformed

    private void jButtonBackwardMotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackwardMotionActionPerformed
       spc.writeOnTerminal("2");
    }//GEN-LAST:event_jButtonBackwardMotionActionPerformed

    private void jButtonLeftMotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLeftMotionActionPerformed
        spc.writeOnTerminal("6");
    }//GEN-LAST:event_jButtonLeftMotionActionPerformed

    private void jButtonStopMotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopMotionActionPerformed
        spc.writeOnTerminal("5");
    }//GEN-LAST:event_jButtonStopMotionActionPerformed

    private void jButtonCOMConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCOMConnectActionPerformed
        String selectedPort = (String)jComboBoxCOMPorts.getSelectedItem();
        connect(selectedPort);
    }//GEN-LAST:event_jButtonCOMConnectActionPerformed

    private void jButtonCOMDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCOMDisconnectActionPerformed
        removeGUIComponents();
        spc.removePorts();
        jButtonCOMDisconnect.setEnabled(false);
        jButtonCOMConnect.setEnabled(true);
    }//GEN-LAST:event_jButtonCOMDisconnectActionPerformed

    private void jComboBoxCOMPortsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCOMPortsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCOMPortsActionPerformed

    private void getSliderValueLeftMotor(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_getSliderValueLeftMotor
        int sliderValueLeftMotor = jSliderLeftMotor.getValue();
        jTextFieldLeftMotor.setText(String.valueOf(sliderValueLeftMotor));
    }//GEN-LAST:event_getSliderValueLeftMotor

    private void jTextFieldLeftMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLeftMotorActionPerformed
        // TODO add your handling code here:
        String SliderInputLeftMotor = jTextFieldLeftMotor.getText();
        jSliderLeftMotor.setValue(Integer.parseInt(SliderInputLeftMotor));
    }//GEN-LAST:event_jTextFieldLeftMotorActionPerformed

    private void getSliderValueRightMotor(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_getSliderValueRightMotor
        // TODO add your handling code here:
        int sliderValueRightMotor = jSliderRightMotor.getValue();
        jTextFieldRightMotor.setText(String.valueOf(sliderValueRightMotor));
    }//GEN-LAST:event_getSliderValueRightMotor

    private void jTextFieldRightMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRightMotorActionPerformed
        // TODO add your handling code here:
        String SliderInputRightMotor = jTextFieldRightMotor.getText();
        jSliderRightMotor.setValue(Integer.parseInt(SliderInputRightMotor));
    }//GEN-LAST:event_jTextFieldRightMotorActionPerformed

    private void jButtonSetVelocityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSetVelocityActionPerformed
        // TODO add your handling code here:
        
            //checks whether any of the velocity text field has been left blank
        if(!(jTextFieldLeftMotor.getText().equals(""))&& !(jTextFieldLeftMotor.getText()).isEmpty() && !(jTextFieldRightMotor.getText().equalsIgnoreCase("")) && !(jTextFieldRightMotor.getText().isEmpty()))
        {
            //enables the reset velocity button to reset the velocity
            jButtonResetVelocity.setEnabled(true);
            //gets the left motor velocity and stores it in variable lVelocity
            int lVelocity = Integer.parseInt(jTextFieldLeftMotor.getText());
            //gets the right motor velocity and stores it in variable rVelocity
            int rVelocity = Integer.parseInt(jTextFieldRightMotor.getText());
            spc.writeOnTerminal("R");
            try {
                //writes the left motor velocity on the output stream
                spc.outputstream.write((byte)lVelocity);
                //writes the right motor velocity on the output stream
                spc.outputstream.write((byte)rVelocity);
            } catch (IOException ex) {
                Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
            }
            //Prompts the user that velocity has been set and now the bot will move with the specified velocity
            JOptionPane.showMessageDialog(jPanelFrame, "Bot Will Move With Specified Speeds of Motors");
        }
        else if (jTextFieldLeftMotor.getText().equalsIgnoreCase("") || jTextFieldRightMotor.getText().equalsIgnoreCase("")){
            //Prompts the user to set the valid velocities    
            JOptionPane.showMessageDialog(jPanelFrame, "Please Set the Velocities");
        }
    }//GEN-LAST:event_jButtonSetVelocityActionPerformed

    private void jButtonResetVelocityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetVelocityActionPerformed
        // TODO add your handling code here:
        spc.writeOnTerminal("S");
        
        jTextFieldLeftMotor.setText("");
        jTextFieldRightMotor.setText("");
        jSliderLeftMotor.setValue(255);
        jSliderRightMotor.setValue(255);
    }//GEN-LAST:event_jButtonResetVelocityActionPerformed

    private void getSliderValueServo1(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_getSliderValueServo1
        // TODO add your handling code here:
        int SliderValueServo1 = jSliderServo1.getValue();
        jTextFieldServo1.setText(String.valueOf(SliderValueServo1));
    }//GEN-LAST:event_getSliderValueServo1

    private void getSliderValueServo2(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_getSliderValueServo2
        // TODO add your handling code here:
        int SliderValueServo2 = jSliderServo2.getValue();
        jTextFieldServo2.setText(String.valueOf(SliderValueServo2));
    }//GEN-LAST:event_getSliderValueServo2

    private void getSliderValueServo3(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_getSliderValueServo3
        // TODO add your handling code here:
        int SliderValueServo3 = jSliderServo3.getValue();
        jTextFieldServo3.setText(String.valueOf(SliderValueServo3));
    }//GEN-LAST:event_getSliderValueServo3

    private void jButtonForwardMovementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonForwardMovementActionPerformed
        // TODO add your handling code here:
        if(jTextFieldDistance.getText() != null && !jTextFieldDistance.getText().isEmpty()){
        spc.writeOnTerminal("U");
        int Distance = Integer.parseInt(jTextFieldDistance.getText());
        int qDistance = Distance/255;
        int rDistance = Distance%255;
        try {
            spc.outputstream.write((byte)qDistance);
            spc.outputstream.write((byte)rDistance);
        } catch (IOException ex) {
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButtonForwardMovementActionPerformed

    private void jButtonBackwardMovementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackwardMovementActionPerformed
        // TODO add your handling code here:
        if (jTextFieldDistance.getText() != null && !jTextFieldDistance.getText().isEmpty()){
        spc.writeOnTerminal("V");
        int Distance = Integer.parseInt(jTextFieldDistance.getText());
        int qDistance = Distance/255;
        int rDistance = Distance%255;
        try {
            spc.outputstream.write((byte)qDistance);
            spc.outputstream.write((byte)rDistance);
        } catch (IOException ex) {
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButtonBackwardMovementActionPerformed
    
    private void jButtonRightRotationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRightRotationActionPerformed
        // TODO add your handling code here:
        if(jTextFieldRotation.getText() != null && !jTextFieldRotation.getText().isEmpty()){
        spc.writeOnTerminal("W");
        int Angel = Integer.parseInt(jTextFieldRotation.getText());
        int qRotation = Angel/255;
        int rRotation = Angel%255;
        try {
            spc.outputstream.write((byte)qRotation);
            spc.outputstream.write((byte)rRotation);
        } catch (IOException ex) {
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButtonRightRotationActionPerformed

    private void jButtonLeftRotationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLeftRotationActionPerformed
        // TODO add your handling code here:
        if(jTextFieldRotation.getText() != null && !jTextFieldRotation.getText().isEmpty()){
        spc.writeOnTerminal("X");
        int Angel = Integer.parseInt(jTextFieldRotation.getText());
        int qRotation = Angel/255;
        int rRotation = Angel%255;
        try {
            spc.outputstream.write((byte)qRotation);
            spc.outputstream.write((byte)rRotation);
        } catch (IOException ex) {
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButtonLeftRotationActionPerformed

    private void jButtonServo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonServo1ActionPerformed
        jSliderServo1.setValue(Integer.parseInt(jTextFieldServo1.getText()));
        try {
            spc.outputstream.write(0x80);
            spc.outputstream.write((byte)Integer.parseInt(jTextFieldServo1.getText()));
        } catch (IOException ex) {
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonServo1ActionPerformed

    private void jButtonServo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonServo2ActionPerformed
        // TODO add your handling code here:
        jSliderServo2.setValue(Integer.parseInt(jTextFieldServo2.getText()));
        try {
            spc.outputstream.write(0x81);
            spc.outputstream.write((byte)Integer.parseInt(jTextFieldServo2.getText()));
        } catch (IOException ex) {
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonServo2ActionPerformed

    private void jButtonLCDPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLCDPrintActionPerformed
        try {
            spc.outputstream.write(0x83);
            spc.outputstream.write((byte)Integer.parseInt(jTextFieldLCDRow.getText()));
            spc.outputstream.write((byte)Integer.parseInt(jTextFieldLCDColumn.getText()));
            spc.outputstream.write(jTextFieldLCDText.getText().getBytes());
        } catch (IOException ex) {
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonLCDPrintActionPerformed

    private void jButtonBarGraphLedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBarGraphLedActionPerformed
        // TODO add your handling code here:
        int lednumber = Integer.parseInt(jTextFieldBarGraphLed.getText());
        try{
            spc.outputstream.write(0x84);
        if(lednumber == 1){
            spc.outputstream.write(0x01);
        }
        if(lednumber == 2){
            spc.outputstream.write(0x02);
        }
        if(lednumber == 3){
            spc.outputstream.write(0x04);
        }
        if(lednumber == 4){
            spc.outputstream.write(0x08);
        }
        if(lednumber == 5){
            spc.outputstream.write(0x10);
        }
        if(lednumber == 6){
            spc.outputstream.write(0x20);
        }
        if(lednumber == 7){
            spc.outputstream.write(0x40);
        }
        if(lednumber == 8){
            spc.outputstream.write(0x80);
        }
        }catch(IOException ex){
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonBarGraphLedActionPerformed

    private void jTextFieldServo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldServo1ActionPerformed
        // TODO add your handling code here:
        jSliderServo1.setValue(Integer.parseInt(jTextFieldServo1.getText()));
    }//GEN-LAST:event_jTextFieldServo1ActionPerformed

    private void jTextFieldServo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldServo3ActionPerformed
        // TODO add your handling code here:
        jSliderServo3.setValue(Integer.parseInt(jTextFieldServo3.getText()));
    }//GEN-LAST:event_jTextFieldServo3ActionPerformed

    private void jTextFieldServo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldServo2ActionPerformed
        // TODO add your handling code here:
        jSliderServo2.setValue(Integer.parseInt(jTextFieldServo2.getText()));
    }//GEN-LAST:event_jTextFieldServo2ActionPerformed

    private void jButtonServo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonServo3ActionPerformed
        // TODO add your handling code here:
        jSliderServo3.setValue(Integer.parseInt(jTextFieldServo3.getText()));
        try {
            spc.outputstream.write(0x82);
            spc.outputstream.write((byte)Integer.parseInt(jTextFieldServo3.getText()));
        } catch (IOException ex) {
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonServo3ActionPerformed

  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //SerialCommunication1 serialcomm1 = new SerialCommunication1();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIApp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIApp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIApp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIApp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIApp1().setVisible(true);
            }
        });
    }
    
    /*
    * Function Name: listSerialPorts
    * Input: void
    * Output: list all the available ports in JComboBox
    * Logic: ports are enumerated using getPortIdentifiers() method of CommPortIdentifier class and stored in an array using ArrayList class and the added in JComboBox
    * Example Call: listSerialPorts()
    */
    private void listSerialPorts() {   
    Enumeration ports = CommPortIdentifier.getPortIdentifiers();
    ArrayList portList = new ArrayList();
    String portArray[] = null;
    while (ports.hasMoreElements()) {
        CommPortIdentifier portIdentified = (CommPortIdentifier) ports.nextElement();
        if (portIdentified.getPortType() == CommPortIdentifier.PORT_SERIAL) {
            portList.add(portIdentified.getName());
        }
    }
    portArray = (String[]) portList.toArray(new String[0]);
    jComboBoxCOMPorts.setModel(new javax.swing.DefaultComboBoxModel(portArray));
    jComboBoxCOMPorts.setSelectedIndex(-1);
}
    
    
    /*
    * Function Name: removeGUIComponents
    * Input: void
    * Output: enable disable various components of GUI and removes text from JTextFiel and jLabel and set the value of all the jProgressBar to 0.
    * Logic: setText() method of jLabel class and jTextField is called to clear the text, setEnabled() method is used to disable the text field on diconnecting and setValue() method of jProgressBar class is called to set the value of progress bar equals to 0  
    * Example Call: removeGUIComponents()
    */
    public void removeGUIComponents(){
            jLabelRightWLSensor.setText(null);
            jLabelCenterWLSensor.setText(null);
            jLabelLeftWLSensor.setText(null);
            jLabelIRSensor1.setText(null);
            jLabelIRSensor2.setText(null);
            jLabelIRSensor3.setText(null);
            jLabelIRSensor4.setText(null);
            jLabelIRSensor5.setText(null);
            jLabelIRSensor6.setText(null);
            jLabelIRSensor7.setText(null);
            jLabelIRSensor8.setText(null);
            jLabelSharpSensor1.setText(null);
            jLabelSharpSensor2.setText(null);
            jLabelSharpSensor3.setText(null);
            jLabelSharpSensor4.setText(null);
            jLabelSharpSensor5.setText(null);
            jLabelVoltage.setText(null);
            jTextFieldLeftMotor.setEnabled(false);
            jTextFieldRightMotor.setEnabled(false);
            jTextFieldServo1.setEnabled(false);
            jTextFieldServo2.setEnabled(false);
            jTextFieldServo3.setEnabled(false);
            jTextFieldDistance.setEnabled(false);
            jTextFieldRotation.setEnabled(false);
            jProgressBarLeftWLSensor.setValue(0);
            jProgressBarRightWLSensor.setValue(0);
            jProgressBarCenterWLSensor.setValue(0);
            jProgressBarSharpSensor1.setValue(0);
            jProgressBarSharpSensor2.setValue(0);
            jProgressBarSharpSensor3.setValue(0);
            jProgressBarSharpSensor4.setValue(0);
            jProgressBarSharpSensor5.setValue(0);
            jProgressBarIRSensor1.setValue(0);
            jProgressBarIRSensor2.setValue(0);
            jProgressBarIRSensor3.setValue(0);
            jProgressBarIRSensor4.setValue(0);
            jProgressBarIRSensor5.setValue(0);
            jProgressBarIRSensor6.setValue(0);
            jProgressBarIRSensor7.setValue(0);
            jProgressBarIRSensor8.setValue(0);
            jProgressBarBatteryVoltage.setValue(0);
            jTextFieldLeftMotor.setText("");
            jTextFieldRightMotor.setText("");
            jTextFieldServo1.setText("");
            jTextFieldServo2.setText("");
            jTextFieldServo3.setText("");
            jTextFieldDistance.setText("");
            jTextFieldRotation.setText("");
            jTextFieldLCDRow.setText("");
            jTextFieldLCDColumn.setText("");
            jTextFieldLCDText.setText("");
            jTextFieldLCDRow.setEnabled(false);
            jTextFieldLCDColumn.setEnabled(false);
            jTextFieldLCDText.setEnabled(false);
            jTextFieldBarGraphLed.setEnabled(false);
    }
    
    /*
    * Function Name: ConnectComponents
    * Input: void
    * Output: Enable all the jTextField and jLabels 
    * Logic: setEnabled() function of jTextField and jLabel class is called to enable text field and label
    * Example Call: ConnectGUIComponents()
    */
    public void connectGUIComponents(){
        jTextFieldLeftMotor.setEnabled(true);
        jTextFieldRightMotor.setEnabled(true);
        jTextFieldServo1.setEnabled(true);
        jTextFieldServo2.setEnabled(true);
        jTextFieldServo3.setEnabled(true);
        jTextFieldDistance.setEnabled(true);
        jTextFieldRotation.setEnabled(true);
        jButtonCOMDisconnect.setEnabled(true);
        jButtonCOMConnect.setEnabled(false);
        jButtonSetVelocity.setEnabled(true);
        jTextFieldLCDRow.setEnabled(true);
        jTextFieldLCDColumn.setEnabled(true);
        jTextFieldLCDText.setEnabled(true);
        jTextFieldBarGraphLed.setEnabled(true);
        new Thread(new ReadThread()).start();
        
    }
    
    
    private class ReadThread implements Runnable {  // Thread to read the value of sensors
    public void run() {
        while(spc.portId.isCurrentlyOwned() && read==true) {
            try {
                
                spc.writeOnTerminal("T");
                Thread.sleep(2000);
            } catch (InterruptedException ex) {
                Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
    
    /*
    * Function Name: connect
    * Input: String
    * Output: connect the selected COM port
    * Logic: 
    * Example Call:
    */
    public void connect(String portName){  // Function to connect to the serial port
        int res = spc.connectToPort(portName);
        if(res == 1)
        {
            setSerialEventHandler();
            connectGUIComponents();
        }
        else if( res == 3)
        {
            JOptionPane.showMessageDialog(jPanelFrame, "Port is in use");
        }
            
        else if(res == 4)
        {
            JOptionPane.showMessageDialog(jPanelFrame, "No such port exists");
        }
        
    }
    
    private class SerialEventHandler implements SerialPortEventListener{

        @Override
        public void serialEvent(SerialPortEvent spe) {   // Method called when event to read from serial port occurs
            switch(spe.getEventType()){
                case SerialPortEvent.DATA_AVAILABLE:
                    try {
                    
                        byte singleData = (byte)spc.inputstream.read();
                    
                        if (singleData != NEW_LINE_ASCII)
                        {
                            value= singleData & 0xff;
                            String input = String.valueOf(value);
                            //input = String.valueOf(value);
                    
                            if(flag==1){
                                if(singleData == 0x5A && count1==18){
                                    System.out.println("end");
                                    flag=0;
                                    count1=0;
                                }
               
                            //String temp = new String();
                            int tempvalue = value;
                            if(count1==1){
                                System.out.println(input);
                                jLabelIRSensor1.setText(input);
                                jProgressBarIRSensor1.setValue(tempvalue);
                                count1++;
                            }
                    else if(count1==2){
                    System.out.println(input);
                    jLabelIRSensor2.setText(input);
                    jProgressBarIRSensor2.setValue(tempvalue);
                    count1++;
                    }
                    else if(count1==3){
                    System.out.println(input);
                    jLabelIRSensor3.setText(input);
                    jProgressBarIRSensor3.setValue(tempvalue);
                    count1++;
                    }
                    else if(count1==4){
                    System.out.println(input);
                    jLabelIRSensor4.setText(input);
                    jProgressBarIRSensor4.setValue(tempvalue);
                    count1++;
                    }
                    else if(count1==5){
                    System.out.println(input);
                    jLabelIRSensor5.setText(input);
                    jProgressBarIRSensor5.setValue(tempvalue);
                    count1++;
                    }
                    else if(count1==6){
                    System.out.println(input);
                    jLabelIRSensor6.setText(input);
                    jProgressBarIRSensor6.setValue(tempvalue);
                    count1++;
                    }
                    else if(count1==7){
                    System.out.println(input);
                    jLabelIRSensor7.setText(input);
                    jProgressBarIRSensor7.setValue(tempvalue);
                    count1++;
                    }
                    else if(count1==8){
                    System.out.println(input);
                    jLabelIRSensor8.setText(input);
                    jProgressBarIRSensor8.setValue(tempvalue);
                    count1++;
                    }
                    else if(count1==9){
                    System.out.println(input);
                    value1= Sharp_Distance_Sensor_estimation(tempvalue);
                    input = String.valueOf(value1);
                    jLabelSharpSensor1.setText(input+"mm");
                    jProgressBarSharpSensor1.setValue(value1);
                    count1++;
                    }
                    else if(count1==10){
                    System.out.println(input);
                    value1= Sharp_Distance_Sensor_estimation(value);
                    input = String.valueOf(value1);
                    jLabelSharpSensor2.setText(input+"mm");
                    jProgressBarSharpSensor2.setValue(value1);
                    count1++;
                    singleData = 0x00;
                    }
                    else if(count1==11){
                    System.out.println(input);
                    value1= Sharp_Distance_Sensor_estimation(value);
                    input = String.valueOf(value1);
                    jLabelSharpSensor3.setText(input+"mm");
                    jProgressBarSharpSensor3.setValue(value1);
                    count1++;
                    }
                    else if(count1==12){
                    System.out.println(input);
                    value1= Sharp_Distance_Sensor_estimation(tempvalue);
                    input = String.valueOf(value1);
                    jLabelSharpSensor4.setText(input+"mm");
                    jProgressBarSharpSensor4.setValue(value1);
                    count1++;
                    }
                    else if(count1==13){
                    System.out.println(input);
                    value1= Sharp_Distance_Sensor_estimation(tempvalue);
                    input = String.valueOf(value1);
                    jLabelSharpSensor5.setText(input+"mm");
                    jProgressBarSharpSensor5.setValue(value1);
                    count1++;
                    }
                    else if(count1==14){
                    System.out.println(input);
                    jLabelLeftWLSensor.setText(input);
                    jProgressBarLeftWLSensor.setValue(tempvalue);
                    count1++;
                    }
                    else if(count1==15){
                    System.out.println(input);
                    jLabelCenterWLSensor.setText(input);
                    jProgressBarCenterWLSensor.setValue(tempvalue);
                    count1++;
                    }
                    else if(count1==16){
                    System.out.println(input);
                    jLabelRightWLSensor.setText(input);
                    jProgressBarRightWLSensor.setValue(tempvalue);
                    count1++;
                    }
                    else if(count1==17){
                    System.out.println(input);
                    value2 = (float)(((((tempvalue)*100)*0.07902) + 0.7)/100);
                    input = String.valueOf(value2);
                    jLabelVoltage.setText("   "+input+"V");
                    jProgressBarBatteryVoltage.setValue((int)value2);
                    count1++;
                    }
                }
                if(singleData == 0x59){
                System.out.println("start");
                flag=1;
                count1=1;
                }
                break;
                //default: System.out.println("No data available");
                    
                    //outputstream.flush();
            }
        }catch (IOException ex) {
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }   
      }
        
    }
 }
        
    /*
    * Function Name: setSerialEventHandler 
    * Input: void
    * Output: set the serial event handler by adding the event listener
    * Logic: addEventListener() and notifyOnDataAvailable() method of serialport class is called to set the serial event handler
    * Example Call: setSerialEventHandler()
    */
    public void setSerialEventHandler(){   
      SerialEventHandler seh = new SerialEventHandler(); //Creates the object of SeriaEventHandler class
        try {
            spc.serialport.addEventListener(seh); //Registers a SerialPortEventListener object to listen for SerialEvents.
            spc.serialport.notifyOnDataAvailable(true); //Expresses interest in receiving notification when input data is available.
        } catch (TooManyListenersException ex) {
            Logger.getLogger(GUIApp1.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }
  
    /*
    * Function Name: Sharp_Distance_Sensor_estimation
    * Input: int-> reading of sensor 
    * Output: int-> reading of sensor in millimeter
    * Logic: estimated the value of sensor in millimeter
    * Example Call: Sharp_Distance_Sensor_estimation(value)
    */
    int Sharp_Distance_Sensor_estimation (int value){
        float distance; //local variable to store the value of distance sensor in mm
	int distanceInt; //convert local variable distance into interger
	distance = (int)(10.00*(2799.6*(1.00/(Math.pow(value,1.1546))))); //converts distance sensor reading into millimeter
	distanceInt = (int)distance;
	if(distanceInt>800)
	{
		distanceInt=800;
	}
	return distanceInt;
     
    }
 
    public void setIcon(){
           setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.jpg")));
    }

       


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButtonBackwardMotion;
    public javax.swing.JButton jButtonBackwardMovement;
    public javax.swing.JButton jButtonBarGraphLed;
    private javax.swing.JButton jButtonBuzzer;
    public javax.swing.JButton jButtonCOMConnect;
    public javax.swing.JButton jButtonCOMDisconnect;
    public javax.swing.JButton jButtonForwardMotion;
    public javax.swing.JButton jButtonForwardMovement;
    public javax.swing.JButton jButtonLCDPrint;
    public javax.swing.JButton jButtonLeftMotion;
    public javax.swing.JButton jButtonLeftRotation;
    public javax.swing.JButton jButtonResetVelocity;
    public javax.swing.JButton jButtonRightMotion;
    public javax.swing.JButton jButtonRightRotation;
    public javax.swing.JButton jButtonServo1;
    public javax.swing.JButton jButtonServo2;
    public javax.swing.JButton jButtonServo3;
    private javax.swing.JButton jButtonSetVelocity;
    public javax.swing.JButton jButtonStopMotion;
    public javax.swing.JComboBox jComboBoxCOMPorts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBuzzer;
    private javax.swing.JLabel jLabelCOMPort;
    public javax.swing.JLabel jLabelCenterWLSensor;
    private javax.swing.JLabel jLabelDistance;
    private javax.swing.JLabel jLabelHeading;
    public javax.swing.JLabel jLabelIRSensor1;
    public javax.swing.JLabel jLabelIRSensor2;
    public javax.swing.JLabel jLabelIRSensor3;
    public javax.swing.JLabel jLabelIRSensor4;
    public javax.swing.JLabel jLabelIRSensor5;
    public javax.swing.JLabel jLabelIRSensor6;
    public javax.swing.JLabel jLabelIRSensor7;
    public javax.swing.JLabel jLabelIRSensor8;
    private javax.swing.JLabel jLabelLCDColumn;
    private javax.swing.JLabel jLabelLCDRow;
    private javax.swing.JLabel jLabelLCDText;
    private javax.swing.JLabel jLabelLeftMotor;
    public javax.swing.JLabel jLabelLeftWLSensor;
    private javax.swing.JLabel jLabelMotionControl;
    private javax.swing.JLabel jLabelRightMotor;
    public javax.swing.JLabel jLabelRightWLSensor;
    private javax.swing.JLabel jLabelRotation;
    private javax.swing.JLabel jLabelServoMotor1;
    private javax.swing.JLabel jLabelServoMotor2;
    private javax.swing.JLabel jLabelServoMotor3;
    public javax.swing.JLabel jLabelSharpSensor1;
    public javax.swing.JLabel jLabelSharpSensor2;
    public javax.swing.JLabel jLabelSharpSensor3;
    public javax.swing.JLabel jLabelSharpSensor4;
    public javax.swing.JLabel jLabelSharpSensor5;
    public javax.swing.JLabel jLabelVoltage;
    private javax.swing.JPanel jPanelBarLED;
    private javax.swing.JPanel jPanelBatterVoltage;
    private javax.swing.JPanel jPanelBuzzer;
    private javax.swing.JPanel jPanelCOMPort;
    private javax.swing.JPanel jPanelDistanceSensor;
    private javax.swing.JPanel jPanelFrame;
    private javax.swing.JPanel jPanelIRSensor;
    private javax.swing.JPanel jPanelLCD;
    private javax.swing.JPanel jPanelMotionControl;
    private javax.swing.JPanel jPanelMovementRotation;
    private javax.swing.JPanel jPanelServoMotor;
    public javax.swing.JPanel jPanelVelocity;
    public javax.swing.JPanel jPanelWLSensor;
    public javax.swing.JProgressBar jProgressBarBatteryVoltage;
    public javax.swing.JProgressBar jProgressBarCenterWLSensor;
    public javax.swing.JProgressBar jProgressBarIRSensor1;
    public javax.swing.JProgressBar jProgressBarIRSensor2;
    public javax.swing.JProgressBar jProgressBarIRSensor3;
    public javax.swing.JProgressBar jProgressBarIRSensor4;
    public javax.swing.JProgressBar jProgressBarIRSensor5;
    public javax.swing.JProgressBar jProgressBarIRSensor6;
    public javax.swing.JProgressBar jProgressBarIRSensor7;
    public javax.swing.JProgressBar jProgressBarIRSensor8;
    public javax.swing.JProgressBar jProgressBarLeftWLSensor;
    public javax.swing.JProgressBar jProgressBarRightWLSensor;
    public javax.swing.JProgressBar jProgressBarSharpSensor1;
    public javax.swing.JProgressBar jProgressBarSharpSensor2;
    public javax.swing.JProgressBar jProgressBarSharpSensor3;
    public javax.swing.JProgressBar jProgressBarSharpSensor4;
    public javax.swing.JProgressBar jProgressBarSharpSensor5;
    public javax.swing.JSlider jSliderLeftMotor;
    public javax.swing.JSlider jSliderRightMotor;
    public javax.swing.JSlider jSliderServo1;
    public javax.swing.JSlider jSliderServo2;
    public javax.swing.JSlider jSliderServo3;
    public javax.swing.JTextField jTextFieldBarGraphLed;
    public javax.swing.JTextField jTextFieldDistance;
    public javax.swing.JTextField jTextFieldLCDColumn;
    public javax.swing.JTextField jTextFieldLCDRow;
    public javax.swing.JTextField jTextFieldLCDText;
    public javax.swing.JTextField jTextFieldLeftMotor;
    public javax.swing.JTextField jTextFieldRightMotor;
    public javax.swing.JTextField jTextFieldRotation;
    public javax.swing.JTextField jTextFieldServo1;
    public javax.swing.JTextField jTextFieldServo2;
    public javax.swing.JTextField jTextFieldServo3;
    // End of variables declaration//GEN-END:variables
}
